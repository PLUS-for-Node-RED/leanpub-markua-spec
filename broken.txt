<div class="extension">

## Figure Titles

A resource which is inserted as a figure can have a figure title.


##### Figure alt text

##### The figure attribute list takes precedence

It is always an error to specify an attribute both in the attribute list for a
figure and in the syntactic sugar locations, either after the backticks or in the
square brackets.

However, if this is done, then the value in the attribute list takes precedence.

In the following figure, the format is `text` not `ruby`:

~~~
{format: text}
```ruby
puts "hello world"
```
~~~

In the following figure, the alt text would be "foo" not "bar":

~~~
{alt: foo}
![bar](foo.png)
~~~

In the following figure, the title text would be "foo" not "bar":

~~~
{title: foo}
![](foo.png "bar")
~~~

Again, the Markua Processor should treat all of these as an error.

#### Spans

Inserting a resource as a span means to continue the block context which it is
in, instead of starting a new leaf block for the resource.

There are three types of resources which can be inserted as spans:

1. Single-line inline code resources.
2. A `math` resource (regardless of location) without a title.
3. A local or web `image` resource without a title.

An inline code resource can be inserted as a span using the following syntax:

~~~
backtick `resource`format backtick
~~~

The math formats, including the syntactic sugar for them, are discussed later.

A local image resource without a title can be inserted as expected:

~~~
This is an ![a red apple](mac.jpg) not a banana.
~~~

A web image resource without a title can be inserted as expected:

~~~
This is an ![a red apple](http://markua.com/mac.jpg) not a banana.
~~~

Note that inline image resources cannot be inserted as spans, since even SVG is
so verbose it would make the resulting document very hard to read.

Also, note that if you wish to insert an image in the middle of a sentence,
chances are you are trying to insert an emoji. You can do this with a span image,
if you want exact control of what your emoji look like. However, note that emoji
also have special support in Markua, described [here](#emoji).

Finally, if a title is present, the Markua Processor must treat the resource
as having implicit newlines before and after it, so that it is handled as a
figure. (Figure titles do not make sense inside of sentences.)

~~~
This is ![a red apple](mac.jpg "The Original Mac") not a banana.
~~~

##### Span attribute lists can be used to set the format

When a resource is inserted as a span, the resource is inserted as part of the
flow of text of a paragraph with no newlines before or after it. A span resource
is intended to be extremely short and simple.

By default, the type of an inline resource is `code` and the format is `guess`.
Math and SVG images override this using special syntaxes, discussed later.

However, to support rare use cases, any span can have an attribute list. The
attribute list on a span is specified immediately after the closing backtick.
Span attribute lists can be used to set the format explicitly.

For example, this resource would be formatted as Ruby code:
~~~
Yada yada `puts "hi"`{format: ruby} yada yada.
~~~



</div>


